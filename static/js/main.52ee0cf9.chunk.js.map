{"version":3,"sources":["utils.ts"," jsstore_con.ts","DataService.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["todayUTC","now","DateTime","toUTC","utc","year","month","day","toSlug","date","padStart","toString","JsStore","require","workerPath","default","connection","Connection","Worker","load","a","slug","url","process","fetch","resp","json","initDb","name","tables","columns","id","primaryKey","dataType","time","notNull","reserveRatio","stableCoinPrice","stableCoinRatio","reserveCoinPrice","reserveCoinRatio","today","isToday","equals","nextDate","plus","days","minus","minutes","select","from","where","low","toMillis","high","items","length","insert","into","upsert","values","map","i","fromISO","loadForDateRange","dates","Observable","subscriber","queue","PQueue","concurrency","on","next","error","addAll","loadForDate","then","is","complete","initialize","App","useState","data","setData","start","end","nowDateRange","dateRange","setDateRange","addNewData","useCallback","useEffect","range","diff","n","subscribe","handleLoadPrevious","dr","Duration","fromObject","chartData","useMemo","slugs","sortBy","Object","keys","reduce","all","acc","item","index","Math","pow","label","toLocaleString","DATETIME_SHORT","parseInt","stable","round","parseFloat","reserve","className","href","data-ribbon","title","target","rel","DATE_FULL","onClick","ResponsiveContainer","width","height","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Line","type","stroke","ReferenceArea","y1","y2","fill","opacity","alwaysShow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Chart","register","annotationPlugin","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52ee0cf9.chunk.js","sourcesContent":["import { DateTime } from \"luxon\";\nimport { Slug } from \"./types\";\nimport padStart from 'lodash/padStart';\n\nexport function nowDateRange() {\n\n    const today = todayUTC();\n    return {\n        start: today, end: today\n    };\n}\n\nexport function todayUTC() {\n    const now = DateTime.now().toUTC();\n    return DateTime.utc(now.year, now.month, now.day);\n}\n\nexport function toSlug(date: DateTime): Slug {\n    return `${date.year}-${padStart(date.month.toString(), 2, '0')}-${padStart(date.day.toString(), 2, '0')}`\n}\n","const JsStore = require('jsstore');\n\n/* eslint-disable */\n\n\nconst getWorkerPath = () => {\n\n    // return dev build when env is development\n    if (process.env.NODE_ENV === 'development') {\n\n        return require(\"file-loader?name=scripts/[name].[hash].js!jsstore/dist/jsstore.worker.js\");\n\n    }\n    else { // return prod build when env is production\n\n        return require(\"file-loader?name=scripts/[name].[hash].js!jsstore/dist/jsstore.worker.min.js\");\n\n    }\n};\n\nconst workerPath = getWorkerPath().default;\nexport const connection = new JsStore.Connection(new Worker(workerPath));","\nimport { DateTime } from \"luxon\";\nimport PQueue from \"p-queue/dist/index\";\nimport { Observable } from \"rxjs\"\nimport { connection } from \"./ jsstore_con\";\nimport { Item } from \"./types\";\nimport { todayUTC, toSlug } from \"./utils\";\n\nasync function load(date: DateTime): Promise<Item[]> {\n    const slug = toSlug(date);\n    const url = `${process.env.PUBLIC_URL}/data/daily/${slug}.json`\n    // TODO: validate against schema https://github.com/pelotom/runtypes ?\n    const resp = await fetch(url);\n    return await resp.json();\n}\n\nasync function initialize() {\n    await connection.initDb({\n        name: 'sigmausd',\n        tables: [\n            {\n                name: 'Items',\n                columns: {\n                    id: { primaryKey: true, dataType: \"number\" },\n                    time: { notNull: true, dataType: \"string\" },\n                    reserveRatio: { notNull: true, dataType: \"string\" },\n                    stableCoinPrice: { notNull: true, dataType: \"string\" },\n                    stableCoinRatio: { notNull: true, dataType: \"string\" },\n                    reserveCoinPrice: { notNull: true, dataType: \"string\" },\n                    reserveCoinRatio: { notNull: true, dataType: \"string\" },\n                }\n            },\n        ]\n    });\n\n};\n\ninitialize();\n\n\n\nexport async function loadForDate(date: DateTime): Promise<Item[]> {\n    const today = todayUTC();\n    const isToday = today.equals(date)\n\n    if (!isToday) {\n        // check db\n        const nextDate = date.plus({ days: 1 }).minus({ minutes: 5 })\n\n        const items: Item[] = await connection.select({\n            from: \"Items\",\n            where: {\n                id: {\n                    '-': {\n                        low: date.toMillis(),\n                        high: nextDate.toMillis(),\n                    }\n                },\n            }\n        });\n\n        if (items.length > 0) {\n            return items;\n        }\n\n    }\n\n    const items = await load(date);\n\n    if (!isToday) {\n\n        await connection.insert({\n            into: 'Items',\n            upsert: true,\n            values: items.map(i => ({\n                ...i,\n                id: DateTime.fromISO(i.time).toMillis()\n            }))\n        })\n    }\n\n    return items;\n}\n\ntype DateRangeItems = [DateTime, Item[]]\n\nexport function loadForDateRange(dates: DateTime[]): Observable<DateRangeItems> {\n    return new Observable<DateRangeItems>(subscriber => {\n        const queue = new PQueue({ concurrency: 2 });\n        queue.on('completed', (items: DateRangeItems) => {\n            subscriber.next(items);\n        });\n        queue.on('error', error => {\n            subscriber.error(error);\n        });\n        queue.addAll(dates.map(date => (() => loadForDate(date).then(is => ([date, is] as const)))))\n            .then(() => subscriber.complete())\n    });\n};\n","import './App.scss';\n\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport 'whatwg-fetch';\nimport { DateTime, Duration } from 'luxon';\nimport sortBy from 'lodash/sortBy';\nimport { LineChart, CartesianGrid, XAxis, YAxis, Tooltip, Line, ResponsiveContainer, ReferenceArea } from 'recharts'\n\nimport { DateRange, Item, Slug } from './types';\nimport { toSlug, nowDateRange } from './utils';\nimport { loadForDateRange } from './DataService';\nimport range from 'lodash/range';\n\nconst App = (): JSX.Element => {\n\n  const [data, setData] = useState<{ [slug: string]: Item[] | undefined }>({});\n\n  const [dateRange, setDateRange] = useState<DateRange>(nowDateRange());\n\n  const addNewData = useCallback((slug: Slug, items: Item[]) => {\n    setData(data => ({\n      ...data,\n      [slug]: items,\n    }));\n  }, [])\n\n  useEffect(() => {\n    const nums = range(dateRange.end.diff(dateRange.start, 'days').days + 1);\n\n    const dts = nums.map(n => dateRange.start.plus({ days: n }));\n\n    loadForDateRange(dts).subscribe(([date, items]) => addNewData(toSlug(date), items))\n\n  }, [addNewData, dateRange]);\n\n  const handleLoadPrevious = useCallback(() => {\n    setDateRange(dr => {\n      if (data[toSlug(dr.start)]) {\n        return {\n          ...dr,\n          start: dr.start.minus(Duration.fromObject({ days: 1, }))\n        };\n      } else {\n        return dr;\n      }\n    })\n  }, [data])\n\n  type ChartData = {\n    label: string;\n    reserveRatio: number;\n  }\n\n  const chartData = useMemo(() => {\n\n    const slugs = sortBy(Object.keys(data))\n\n    const allItems = slugs.reduce((all: Item[], slug) => {\n      return [...all, ...(data[slug] ?? [])];\n    }, []);\n\n    return allItems.reduce((acc: ChartData[], item, index) => {\n      if (index % Math.pow(slugs.length, 2) === 0) {\n        return [\n          ...acc,\n          {\n            label: DateTime.fromISO(item.time).toLocaleString(DateTime.DATETIME_SHORT),\n            reserveRatio: parseInt(item.reserveRatio, 10),\n            stable: Math.round(parseFloat(item.stableCoinRatio) * 100) / 100,\n            reserve: parseInt(item.reserveCoinRatio, 10),\n\n          }\n        ]\n      } else {\n        return acc;\n      }\n\n    }, []);\n  }, [data]);\n\n\n\n  return (\n    <div className=\"App container\">\n      <a className=\"github-fork-ribbon\" href=\"https://github.com/bdkent/sigmausd-history\" data-ribbon=\"Fork me on GitHub\" title=\"Fork me on GitHub\" target=\"_blank\" rel=\"noreferrer\">Fork me on GitHub</a>\n      <h1>SigmaUSD History</h1>\n\n      <h2>\n        {dateRange.start.toLocaleString(DateTime.DATE_FULL)}{!dateRange.start.equals(dateRange.end) && <>{' '}—{' '}{dateRange.end.toLocaleString(DateTime.DATE_FULL)}</>}\n      </h2>\n      <button className=\"btn btn-primary\" onClick={handleLoadPrevious}>Load Previous Day</button>\n\n      <hr />\n\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\" card text-dark bg-light mb-3\" >\n            <div className=\"card-header\">Reserve Ratio (%)</div>\n            <div className=\"card-body \">\n              <div className=\"reserveRatioChartWrapper\">\n                {chartData && (\n                  <ResponsiveContainer width=\"100%\" height={200}>\n                    <LineChart width={730} height={250} data={chartData}\n                      margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"label\" />\n                      <YAxis />\n                      <Tooltip />\n                      <Line type=\"monotone\" dataKey=\"reserveRatio\" stroke=\"#8884d8\" />\n                      <ReferenceArea y1={400} y2={800} fill=\"green\" opacity={.25} alwaysShow />\n                    </LineChart>\n                  </ResponsiveContainer>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\" card text-dark bg-light mb-3\" >\n            <div className=\"card-header\">SigmaUSD ($)</div>\n            <div className=\"card-body \">\n              <div className=\"reserveRatioChartWrapper\">\n                {chartData && (\n                  <ResponsiveContainer width=\"100%\" height={200}>\n                    <LineChart width={730} height={250} data={chartData}\n                      margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"label\" />\n                      <YAxis />\n                      <Tooltip />\n                      <Line type=\"monotone\" dataKey=\"stable\" stroke=\"#8884d8\" />\n                    </LineChart>\n                  </ResponsiveContainer>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\" card text-dark bg-light mb-3\" >\n            <div className=\"card-header\">SigmaRSV</div>\n            <div className=\"card-body \">\n              <div className=\"reserveRatioChartWrapper\">\n                {chartData && (\n                  <ResponsiveContainer width=\"100%\" height={200}>\n                    <LineChart width={730} height={250} data={chartData}\n                      margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"label\" />\n                      <YAxis />\n                      <Tooltip />\n                      <Line type=\"monotone\" dataKey=\"reserve\" stroke=\"#8884d8\" />\n                    </LineChart>\n                  </ResponsiveContainer>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <hr />\n      <footer className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div className=\"container-fluid\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <a href=\"http://sigmausd.io\" className=\"nav-link\">sigmausd.io</a>\n            </li>\n          </ul>\n        </div>\n      </footer>\n\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Chart } from 'chart.js';\nimport annotationPlugin from 'chartjs-plugin-annotation';\n\nChart.register(annotationPlugin);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}